@model LL.Store.UI.ViewModels.Produtos.AddEdit.ProdutoAddEditVM

@{
    ViewBag.Title = $"{(Model.Id == 0 ? "Adicionar" : "Editar")} Produto";
}
<h2>@ViewBag.Title</h2>

<form method="post">

    <div class="form-group">
        <label for="Nome">Nome:</label>
        @Html.TextBoxFor(p => p.Nome, new { @class = "form-control", autofocus = "" })
        <small>@Html.ValidationMessageFor(p => p.Nome, null, new { @class = "text-danger" })</small>
    </div>

    <div class="form-group">
        <label for="txtPreco">Preço:</label>
        @Html.TextBoxFor(p => p.Preco, new { @class = "form-control" })
        <small>@Html.ValidationMessageFor(p => p.Preco, null, new { @class = "text-danger" })</small>
    </div>

    <div class="form-group">
        <label for="Tipo">Tipo:</label>
        @Html.DropDownListFor(p => p.TipoDeProdutoId, new SelectList(ViewBag.Tipos, "Id", "Nome"), "Selecione...", new { @class = "form-control" })
        <small>@Html.ValidationMessageFor(p => p.TipoDeProdutoId, null, new { @class = "text-danger" })</small>
    </div>

    <div class="form-group">
        <label for="Qtde">Qtde:</label>
        @Html.TextBoxFor(p => p.Qtde, new { @class = "form-control" })
        <small>@Html.ValidationMessageFor(p => p.Qtde, null, new { @class = "text-danger" })</small>
    </div>

    <div>
        @Html.ValidationSummary(true)
    </div>

    <div class="form-group">
        <button class="btn btn-outline-secondary">Salvar</button>
        <a class="btn btn-outline-info" href="@Url.Action("Index")">Cancelar</a>
    </div>
</form>

@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/bootstrap.validate.js"></script>
}